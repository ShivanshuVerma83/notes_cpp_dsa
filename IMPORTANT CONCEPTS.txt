1. TO FIND THE (N+1)TH FIBONACCI NUMBER WITH TIME COMPLEXITY O(LOGN), WE MUST MULTIPLY THE MATRIX {{1,1},{1,0}} BY ITSELF FOR N TIMES AND THEN PRINT THE (0,0) POSITION OF THE MATRIX.

2. TO CALCULATE a^(b^c) for very large numbers, we will calculate b^c%(M-1), then with this value, we will calculate (a^value)%M.

3. PROOF WHY MERGE SMALLER INTO LARGER HAS LOGN COMPLEXITY = 
IF WE ARE MERGING A SET OF SIZE X INTO A SET OF SIZE Y, THE MINIMUM SIZE FOR THE NEW SET WILL BE MINIMUM 
2*X. BY THIS, IF FOR A PARTICULAR NUMBER, WE HAE MERGED IT K TIMES, THE SIZE OF THE SET WHICH HAS IT IS
ATLEAST 2^K, SO HERE, WE GET A LOGN RELATIONSHIP. FOR A SET OF SIZE N, EACH ELEMENT IS MOVED ATMOST LOGN