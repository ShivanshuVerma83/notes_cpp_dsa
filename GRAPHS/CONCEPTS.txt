2. TO FIND WHETHER A GRAPH IS A TREE OR NOT, WE NEED TO CHECK TWO CONDITIONS
	A = IT SHOULD NOT HAVE MORE THAN ONE CONNECTED COMPONENTS, AS THE TREE CAN NEVER BE DISCONNECTED LIKE GRAPHS.
	B = TREE DO NOT HAVE ANY CYCLE, SO WE WILL CHECK IF, NUMBER OF EDGE + 1 = NUMBER OF NODES, THIS WILL PROVE THAT 	A GRAPH DOES NOT HAVE A CYCLE, AND IT IS A TREE. 

3. TO FIND DIAMETER OF A TREE, WE HAVE 4 METHODS, TWO OF THEM WERE SEEN IN TREES USING HEIGHT OF THE LEFT AND RIGHT SUBTREES + 1, NOW WE HAVE TWO MORE METHODS.
	A = ITERATE THROUGH EVERY NODE AND FIND THE FARTHEST DISTANCE FROM IT WITH THE HELP OF SINGLE SOURCE SHORTEST PATH IN DFS MAKING THAT NODE AS MAIN NODE, AND WE WILL UPDATE MAXIMUM EVERYTIME. O(N^2)
	B = TAKE ANY NODE AS A ROOT, FIND A FARTHEST NODE FROM IT(CAN BE MULTIPLE), THE FARTHEST NODE FOUND IS ONE OF THE END POINTS OF DIAMETER, SO TAKE THAT AS A ROOT AND FIND THE FARTHEST NODE FROM IT AND MAKE THEIR DISTANCE AS THE DIAMETER OF THE TREE.

4. FOR FINDING LCA IN A TREE, USE SPARSE MATRIX METHOD FOR LOG(N) TIME IN QUERIES.

5. A GRAPH IS NOT BIPARTITE IF IT CONTAINS A CYCLE OF ODD NUMBER OF NODES, OTHERWISE, IT IS BIPARTITE.

6. HANDSHAKING LEMMA THEOREM - (A) TOTAL NUMBER OF EDGES WITH ODD DEGREE ARE EVEN IN AN UNDIRECTED GRAPH.
			       (B) 2*(NUMBER OF EDGES) = SUM OF DEGREES OF ALL THE VERTICES.

7. IF WE HAVE A DIRECTED ACYCLIC GRAPH WITH WEIGHTS, WE CAN FIND SHORTEST PATH, LONGEST PATH AND TOTAL NUMBSER OF PATHS. FOR REFERENCE - GAME ROUTES AND LONGEST FLIGHT ROUTES PROBLEMS IN CSES	